<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.blog.web.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.my.blog.core.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="regist_time" jdbcType="TIMESTAMP" property="registTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, sex, age, birthday, email, image_url, state, nickname,regist_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
  </select>
     <select id="login" parameterType="com.my.blog.core.entity.User" resultType="com.my.blog.core.entity.User">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where username=#{username,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR}
  </select>
  
  <select id="selectSum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  select count(id)
  from t_user
  </select>
<!--   
   <select id="selectYesterday" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	select count(id)
	from t_user 
	where TO_DAYS(NOW( ) ) - TO_DAYS(registTime) <= 1 
  </select>
   -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.my.blog.core.entity.User">
    insert into t_user (id, username, password, 
      sex, age, birthday, 
      email, image_url, state, nickname,regist_time
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, 
      #{email,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
	  #{registTime,jdbcType=TIMESTAMP}     
      )
  </insert>
  <insert id="insertSelective" parameterType="com.my.blog.core.entity.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="registTime !=null">
      regist_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
       <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
       <if test="registTime !=null">
      #{registTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.blog.core.entity.User">
    update t_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
       <if test="registTime !=null">
      regist_time =#{registTime,jdbcType=TIMESTAMP}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.blog.core.entity.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      nickname= #{nickname,jdbcType=VARCHAR},
      regist_time=#{registTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>